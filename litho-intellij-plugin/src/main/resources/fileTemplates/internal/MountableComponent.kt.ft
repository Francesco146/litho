package ${PACKAGE_NAME}

import android.content.Context
import com.facebook.litho.MeasureScope
import com.facebook.litho.MountableComponent
import com.facebook.litho.MountableComponentScope
import com.facebook.litho.MountableRenderResult
import com.facebook.litho.SimpleMountable
import com.facebook.litho.SizeSpec
import com.facebook.litho.Style
import com.facebook.rendercore.MeasureResult

class ${NAME}(private val style: Style? = null) : MountableComponent() {

  override fun MountableComponentScope.render(): MountableRenderResult {
      return MountableRenderResult(${NAME}Mountable(),style)
    }
}

internal class ${NAME}Mountable() : SimpleMountable<ContentTypeClass>() {

override fun createContent(context: Context): ContentTypeClass {}

  override fun MeasureScope.measure(widthSpec: Int, heightSpec: Int): MeasureResult {}

  override fun mount(context: Context, content: ContentTypeClass, layoutData: Any?) {}

  override fun unmount(context: Context, content: ContentTypeClass, layoutData: Any?) {}

  override fun shouldUpdate(
      newMountable: SimpleMountable<ContentTypeClass>,
      currentLayoutData: Any?,
      nextLayoutData: Any?
  ): Boolean {
  newMountable as ${NAME}Mountable
  // optional method that can be removed. Use only if your should update logic is implementing custom functionality
  }
}
